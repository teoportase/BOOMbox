@using System.Text.Json;
@inject Blazored.LocalStorage.ISyncLocalStorageService localStorage

<div class="section--body--item song--item" @onclick="() => PublishMqtt(song.Id)">
    <div class="section--body--item--img">
        <img src="res/album_thumbnail/@song.Image" alt="@song.Title">
    </div>
    <p class="section--body--item--title">@song.Title</p>
    <p class="section--body--item--subtitle">@song.Artist</p>
    <button @onclick="LikeSong">@likeButton</button>
</div>

@code {
    [Parameter]
    public Song song { get; set; }

    public bool isLiked { get; set; } = false;
    public string likeButton { get; set; } = "Like";
    List<Song> likedSongs;

    //MQTT message topic
    protected readonly string topic = "music";

    //Publishing a MQTT message
    protected void PublishMqtt(string message)
    {
        _ = MqttConnection.GetInstance().PublishMessage(topic, message);
    }

    protected void LikeSong()
    {

        if(localStorage.ContainKey("liked"))
        {
            string readStorage = localStorage.GetItem<string>("liked");
            likedSongs = JsonSerializer.Deserialize<List<Song>>(readStorage);
        }

        if (!isLiked)
        {
            likedSongs.Add(song);
            likeButton = "Unlike";
            isLiked = true;
        }
        else
        {
            likedSongs.Remove(song);
            likeButton = "Like";
            isLiked = false;
        }
        string json = JsonSerializer.Serialize(likedSongs);
        localStorage.SetItem("liked", json);
    }

    protected override void OnInitialized()
    {
        likedSongs = LikedSongsComponent.likedSongs;
        if (likedSongs.Contains(song))
        {
            likeButton = "Unlike";
            isLiked = true;
        }
    }
}
